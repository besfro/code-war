# This is the default config file. It allows all users to do anything,
# so don't use it on production systems.
#
# Look here for more config file examples:
# https://github.com/verdaccio/verdaccio/tree/master/conf
#

# path to a directory with all packages
storage: ./storage
# path to a directory with plugins to include
plugins: ./plugins

web:
  title: Verdaccio
  # comment out to disable gravatar support
  # gravatar: false
  # by default packages are ordercer ascendant (asc|desc)
  # sort_packages: asc

auth:
  htpasswd:
    file: ./htpasswd
    # Maximum amount of users allowed to register, defaults to "+inf".
    # You can set this to -1 to disable registration.
    max_users: 1000

# a list of other known repositories we can talk to
uplinks:
  taobao:
    url: https://registry.npm.taobao.org/
    max_fails: 5
    fail_timeout: 2m
  npmjs:
    url: https://registry.npmjs.org/
    max_fails: 5
    fail_timeout: 2m

url_prefix: /verdaccio/

packages:
  '**':
    access: $all
    publish: $authenticated
    unpublish: $authenticated
    proxy: npmjs

  '@company/*':
    access: $authenticated
    publish: admin manager
    unpublish: admin manager

  'old-*':

  #'**':
    # allow all users (including non-authenticated users) to read and
    # publish all packages
    #
    # you can specify usernames/groupnames (depending on your auth plugin)
    # and three keywords: "$all", "$anonymous", "$authenticated"
    # access: $all

    # allow all known users to publish/publish packages
    # (anyone can register by default, remember?)
    # publish: $authenticated
    # unpublish: $authenticated

    # if package is not available locally, proxy requests to 'npmjs' registry
    # proxy: npmjs

listen:
  https://localhost:6657

https:
  key:  .config/verdaccio/verdaccio-key.pem
  cert: .config/verdaccio/verdaccio-cert.pem
  ca:   .config/verdaccio/verdaccio-csr.pem

# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.
# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.
# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.

server:
  keepAliveTimeout: 60

middlewares:
  audit:
    enabled: true

# log settings
logs:
  - { type: stdout, format: pretty, level: http }
  #- {type: file, path: verdaccio.log, level: info}

#experiments:
#  # support for npm token command
#  token: false

# This affect the web and api (not developed yet)
#i18n:
#web: en-US
